function [neuron,scoutpath]=individual_extraction_main(filename,gSiz,data_type,max_neurons,indices,min_pnr,JS)
%Wrapper for neuron extraction. You can also use full_demo_endoscope (1p
%   data) or demo_script(2p data) directly. This script may not work in
%   parfor loops.

%inputs 

%final 3 arguments only relevant if 1p data, see full_demo_endoscope.m

%filename: filepath of recording, 2p data currently supports '.mat', and '.avi' extensions 
%gSiz: maximum neuron size
%min_pnr: min-peak to noise ratio (number, typically larger than 4)
%data_type: '1p' or '2p'
%indices: video indices to extract, leave as [] for full video extraction
%min_pnr: minimum peak-to-noise ratio for data selection
%JS: JS constraint value for 1p data

%outputs

%neuron (Sources2D) extracted neural activity
%scoutpath (string) path to scout on local drive

%%Author Kevin Johnston

%% 

%Parameter setting
if exist('JS','var')
    extraction_options.JS=JS;
else
    extraction_options.JS=0;
end
if exist('gSiz','var')
    extraction_options.gSiz=gSiz;
else
    extraction_options.gSiz=25;
end
if exist('max_neurons','var')
    extraction_options.max_neuronss=max_neurons:
else
    extraction_options.max_neurons=[];
end
if exist('indices','var')
    extraction_options.indices=indices:
else
    extraction_options.indices=[];
end
if exist('min_pnr','var')
    extraction_options.min_pnr=min_pnr:
else
    extraction_options.JS=[];
end

extraction_options.gSiz=gSiz;
extraction_options.max_neurons=max_neurons;
extraction_options.indices=indices;


file_path = mfilename('fullpath');
[path,~,~]=fileparts(file_path);
endout=regexp(path,filesep,'split');
for i=1:length(endout)
    if isequal(endout{i},'SCOUT')
        final_index=i;
        break
    end
end
if ~exist('final_index','var')
    error('Unable to find SCOUT on filepath. Ensure function is in SCOUT directory tree')
else
    scoutpath=filesep;
    for i=1:final_index
    	scoutpath=fullfile(scoutpath,endout{i});
    end
end
if ~exist('max_neurons','var')
    max_neurons=[];
end
if ~exist('indices','var')
    indices=[];
end
if isequal(data_type,'1p')
   rmpath(genpath(fullfile(scoutpath,'CaImAn-MATLAB-master')))
   addpath(genpath(fullfile(scoutpath,'CNMF_E')))

   if ~exist('JS','var')||isempty(JS)
       JS=0;
   end
   if ~exist('JS_constraint','var')||isempty(JS_constraint)
       JS_constraint=[];
   end
   if ~exist('min_pnr','var')||isempty(min_pnr)
       min_pnr=5;
   end
   
   neuron=full_demo_endoscope(filename,indices,JS,min_pnr,JS_constraint,gSiz,max_neurons);
   
elseif isequal(data_type,'2p')
    addpath(genpath(fullfile(scoutpath,'CaImAn-MATLAB-master')));
    rmpath(genpath(fullfile(scoutpath,'CNMF_E')));
    neuron=demo_script(filename,gSiz,max_neurons,indices);
else
    error('disallowed data_type variable')

end
    